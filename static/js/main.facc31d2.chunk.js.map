{"version":3,"sources":["utils/const.js","components/Navbar.js","components/Login.js","components/Loader.js","routes.js","components/Chat.js","components/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","onClick","signOut","to","Login","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","Loader","publicRoutes","path","Component","privateRoutes","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","uid","displayName","text","createdAt","FieldValue","serverTimestamp","map","message","onChange","e","target","type","AppRouter","component","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.facc31d2.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login';\r\nexport const CHAT_ROUTE = '/chat';\r\n","import React, {useContext} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE} from \"../utils/const\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst Navbar = () => {\r\n    const {auth} = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n    return (\r\n        <div>\r\n            {\r\n                user?\r\n                <button onClick={() => auth.signOut()}>Выйти</button>\r\n                :\r\n                    <NavLink to={LOGIN_ROUTE}>\r\n                        <button>Логин</button>\r\n                    </NavLink>\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {useContext} from 'react';\r\nimport {Context} from \"../index\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Login = () => {\r\n    const {auth} = useContext(Context);\r\n\r\n    const login = async() =>{\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        const { user } = await auth.signInWithPopup(provider);\r\n        console.log(user);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={login}>Войти с помощью Google</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/const\";\r\nimport Login from \"./components/Login\";\r\nimport Chat from \"./components/Chat\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login\r\n    }\r\n]\r\n\r\nexport const privateRoutes = [\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat\r\n    }\r\n]","import React, {useContext, useState} from 'react';\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"./Loader\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Chat = () => {\r\n\r\n    const {auth, firestore} = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n    const [value, setValue] = useState('');\r\n    const [messages, loading] = useCollectionData(firestore.collection('messages').orderBy('createdAt'))\r\n\r\n    const sendMessage = async () => {\r\n        firestore.collection('messages').add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            text: value,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        setValue('');\r\n    }\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {messages.map(message =>\r\n                    <div>{message.displayName} - {message.text}</div>\r\n                )}\r\n            </div>\r\n            <input value={value} onChange={e => setValue(e.target.value)} type=\"text\"/>\r\n            <button onClick={sendMessage} >Отправить</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;","import React, { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport {privateRoutes, publicRoutes} from \"../routes\";\r\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"../utils/const\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Context} from \"../index\";\r\n\r\nconst AppRouter = () => {\r\n    const {auth} = useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n\r\n    console.log(user);\r\n    return user ?\r\n        (\r\n            <Switch>\r\n                {privateRoutes.map(({path, Component}) =>\r\n                    <Route key={path} path={path} component={Component} exact/>\r\n                )}\r\n                <Redirect to={CHAT_ROUTE}/>\r\n            </Switch>\r\n        )\r\n        :\r\n        (\r\n            <Switch>\r\n                {publicRoutes.map(({path, Component}) =>\r\n                    <Route key={path} path={path} component={Component} exact/>\r\n                )}\r\n                <Redirect to={LOGIN_ROUTE}/>\r\n            </Switch>\r\n        )\r\n        ;\r\n};\r\n\r\nexport default AppRouter;","\nimport './App.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport {useContext} from \"react\";\nimport {Context} from \"./index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport Loader from \"./components/Loader\";\n\nfunction App() {\n    const {auth} = useContext(Context);\n    const [user, loading, error] = useAuthState(auth);\n\n    if(loading){\n        return <Loader/>\n    }\n  return (\n    <BrowserRouter>\n      <Navbar/>\n      <AppRouter/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from 'react';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCUrA6tXSV28OfydrtQSQ4gGs48hnpM6qg\",\n    authDomain: \"chat-react-5475c.firebaseapp.com\",\n    projectId: \"chat-react-5475c\",\n    storageBucket: \"chat-react-5475c.appspot.com\",\n    messagingSenderId: \"363055042870\",\n    appId: \"1:363055042870:web:067d172cddbd4df93a2397\",\n    measurementId: \"G-QXCDY1JRXY\"\n});\n\nexport const Context = createContext(null);\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nReactDOM.render(\n  <React.StrictMode>\n      <Context.Provider value={{\n          firebase,\n          auth,\n          firestore\n      }}>\n          <App />\n      </Context.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}